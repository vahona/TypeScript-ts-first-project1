{"version":3,"sources":["src/Interfaces.ts","index.ts"],"names":[],"mappings":"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","file":"TypeScript-ts-first-project1.77de5100.js","sourceRoot":"..","sourcesContent":["\r\n\r\nexport interface Person {\r\n    name: string;\r\n    age?: string; //? Optional param\r\n}\r\n\r\nexport enum Type {\r\n    Video, //0\r\n    BlogPost, //1\r\n    Quiz //2\r\n}\r\n\r\n\r\nexport default Job\r\n\r\n\r\nexport enum Type2 {\r\n    Video = 'VIDEO',\r\n    BlogPost = 'BLOG_POST',\r\n    Quiz = 'QUIZ'\r\n}\r\n","import Job, { Person, Type, Type2 } from './src/Interfaces';\r\n\r\n\r\n\r\nconsole.log('Hello world');\r\n\r\nconst isOpen : boolean = false;\r\n\r\nconst myName : string = \"Sugi\";\r\n\r\nconst myAge: number = 26;\r\n\r\nconst list : number[] = [0, 1, 2]\r\n\r\nconst me: [string, number,boolean] = [\"sugi\", 26, false];\r\n\r\nenum Job {WenDev, WebDesigner, PM};\r\n\r\nconst job: Job = Job.WenDev;\r\nconst phone : any = 'Pixel';\r\nconst tablet: any = 3;\r\n\r\n// Function in typescript\r\n\r\nconst sayHello = (word: 'Hello', ...otherStuff: string[]): string => {\r\n    console.log(otherStuff);\r\n    return word\r\n}\r\n\r\n// ? for optional params\r\n\r\n// function sayHello2(word?: string): string {\r\n//     console.log(word);\r\n//     return word || 'hello'\r\n// }\r\n\r\n// function sayHello2(word = \"hello\", ...otherStuff): string {\r\n//     console.log(otherStuff);\r\n    \r\n//     return word \r\n// }\r\n\r\n// sayHello('Sugi')\r\n// sayHello2('heheh', \"kkk\", \"sugi\")\r\n\r\n\r\nfunction sayHello2(word = \"hello\", ...otherStuff: number[]): string {\r\n    console.log(otherStuff);\r\n    \r\n    return word \r\n}\r\n\r\nsayHello(\"Hello\", 'Bell')\r\nsayHello2('heheh', 3, 5)\r\n\r\n\r\nlet newName : string | number | boolean = \"Sugi\"\r\nnewName = 'belle'\r\nnewName = 10\r\nnewName = 10\r\n\r\nconsole.log(newName);\r\n\r\n// Union Types with /\r\n\r\nconst makeMargin = (x: string | number): string => {\r\n      return `margin: ${x}px`\r\n}\r\n\r\nmakeMargin(10);\r\nmakeMargin(false)\r\n\r\n// Null Types\r\n\r\nlet dog: string | undefined = \"Sammy\"\r\n\r\ndog = null\r\n\r\nconsole.log('dog', dog);\r\n\r\ndog = \"Lucie\"\r\ndog = undefined\r\n\r\n\r\n// Interfaces\r\n\r\n\r\n\r\n\r\nconst sayName = ({name, age}: Person): string => {\r\n    console.log(name);\r\n\r\n    return name\r\n    \r\n}\r\n\r\n\r\nsayName({name: \"sugi\", age: \"26\"})\r\nsayName({ age: \"26\"})\r\nsayName({name: \"sugi\"})\r\n\r\n\r\n// Enums\r\n\r\n//Numeric Enum\r\n\r\n\r\n\r\nconst createContent = (contentType: Type) => {\r\n\r\n}\r\n\r\n\r\n\r\ncreateContent(Type.Quiz)\r\n\r\nconsole.log(Type.Quiz);\r\n\r\n\r\n// String Enum\r\n\r\n\r\nconst createContent2 = (contentType: Type2) => {}\r\n\r\ncreateContent2(Type2.Quiz)\r\n\r\nconsole.log(Type2.Quiz);\r\n\r\n//Object oriented programming\r\n// Classes\r\n\r\nclass Team {\r\n\r\n   teamName: string;\r\n//   public  teamName: string; same as the above\r\n//  private teamName: string; prevent outside usage\r\n//   readonly teamName: string; Prevent from being changed\r\n\r\nconstructor(teamName: string) {\r\n    this.teamName = teamName;\r\n}\r\n\r\n    score() : string {\r\n        console.log(this.teamName);\r\n        return 'goal'\r\n        \r\n    }\r\n}\r\n\r\n\r\nconst redWings = new Team('Red Wings');\r\nredWings.score()\r\nredWings.teamName"]}